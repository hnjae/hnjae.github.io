<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Pages on hnjae's wiki</title><link>https://hnjae.github.io/pages/</link><description>Recent content in Pages on hnjae's wiki</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Sun, 26 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hnjae.github.io/pages/index.xml" rel="self" type="application/rss+xml"/><item><title>Btrfs</title><link>https://hnjae.github.io/wiki/btrfs/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/btrfs/</guid><description>tldr 파일시스템 확장 LVM 아니면 GPT 단에서 파티션을 확장하여, 이에 맞춰 Btrfs를 확장할 필요가 있을 수 있다. 다음 커맨드를 이용하자. btrfs filesystem resize max /path/to/mountpoint btrfs fs show /path/to/mountpoint 로 크기</description></item><item><title>Desktop Entry</title><link>https://hnjae.github.io/wiki/desktop-entry/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/desktop-entry/</guid><description>옵션 Exec 옵션 https://specifications.freedesktop.org/desktop-entry-spec/latest/ar01s07.html %u: A single URL %U: A list of URLs Misc 메뉴에서 숨기기 $XDG_DATA_HOME/applications/app-name.desktop 에 다음 내용을 기재하면 보이지 않는다. [Desktop Entry] NoDisplay=true Exec=: ※ Desktop Entry Spec에 Hidden 이라는 키가 있어 헷갈리기 쉽다. Hidden=true 로</description></item><item><title>Firefox</title><link>https://hnjae.github.io/wiki/firefox/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/firefox/</guid><description>초기 설정 메모 추후 초기 설정을 위해 Firefox Sync에서 동기화 해주지 않는 설정을 기술한다. about:config UI 관련 browser.compactmode.show: true Customize Toolbar 에서 Density 를 Compact 로 바꾸는 옵션 토글. DNS 관련 network.trr.mode: 3 DNS 쿼리에 TRR</description></item><item><title>flatpak</title><link>https://hnjae.github.io/wiki/flatpak/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/flatpak/</guid><description>Note Desktop Entry에서 @@ 이 뜻하는 것 --file-forwarding 옵션이 주어졌을 때, @@ 으로 둘러싸인 argument 는 파일 경로로 관주 된다. @@u 와 @@ 으로 둘러싸인 argument 는 uri 로 관주된다. https://docs.flatpak.org/en/latest/flatpak-command-reference.html#flatpak-run TIP Btrfs를</description></item><item><title>JavaScript - Function</title><link>https://hnjae.github.io/wiki/javascript-function/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/javascript-function/</guid><description>JavaScript 에서 함수를 정의할 때, 함수 선언식(function declarations) 또는 함수 표현식 (function expressions)을 사용할 수 있다. 함수 선언식을 사용하면 함수가 호이스</description></item><item><title>JavaScript - String Concatenation</title><link>https://hnjae.github.io/wiki/javascript-string-concatenation/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/javascript-string-concatenation/</guid><description>보고 있는 책의 예시문에서, Array.prototype.join() 을 쓰지 않고, += 을 하면서 새 문자열을 만드는 것을 보았다. 예를 들어 const array = []; for (const char of text) { array.push(char); } return array.join(&amp;#39;&amp;#39;); 와 같이 .join() 를 사용하지 않고, 아래</description></item><item><title>KDE</title><link>https://hnjae.github.io/wiki/kde/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/kde/</guid><description>내가 사용하는 플러그인 리스트 Widget Active Window Control # 상단바에 현행 윈도우를 표기하는 용도 Simple Overview Pager # 기존 Pager 대체. 숫자로만 표기되어 깔끔하다. Latte Separator # 구분선이 필요한 separator 가 필</description></item><item><title>kernel module</title><link>https://hnjae.github.io/wiki/kernel-module/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/kernel-module/</guid><description>tldr 현재 로드된 커널 모듈 확인 lsmod 모듈정보 확인 modinfo module_name</description></item><item><title>Logseq</title><link>https://hnjae.github.io/wiki/logseq/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/logseq/</guid><description>개요 Logseq 은 오픈소스 PKM(Personal Knowledge Management) 시스템이다. markdown 만 지원하는 여타 PKM 과 다르게 org 로 파일을 작성할 수 있다. 오픈소스/프리 프로젝트이지만 추후 유료화할 가능성도 있는 것 같</description></item><item><title>Logseq Plugins</title><link>https://hnjae.github.io/wiki/logseq-plugins/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/logseq-plugins/</guid><description>내가 사용하는 Logseq 플러그인 및 그 사용법 일람. Misc logseq Schrödinger Logseq 의 문서를 hugo 로 export 하는 플러그인. 이 위키도 이 플러그인으로 만들어졌다. Editing Block to page 블록</description></item><item><title>Logseq Shortcuts</title><link>https://hnjae.github.io/wiki/logseq-shortcuts/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/logseq-shortcuts/</guid><description>컨트롤 C-S-p: 커맨드 palette C-k: Open Search box &amp;lt;CR&amp;gt;: Open it in the middle window / &amp;lt;S-CR&amp;gt;: Open it in the sidebar C-o: Open link/tag/page C-[/]: Go back/forward UI tw: toggle wide mode tl: toggle ~l~eft sidebar tt: dark mode toggle 윈도우 관련 C-S-n: 새 윈도우 블록 관련 에디팅 관련 C-b: bold C-l: insert link C-CR:</description></item><item><title>LVM</title><link>https://hnjae.github.io/wiki/lvm/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/lvm/</guid><description>tldr LV 확장 lvextend --size +200G volume_group/logical_volume 이후 파일시스템도 관련 커맨드로 LV 크기에 맞춰 확장하는 것이 필요하다. 일부 파일시스템 (아마도 ext4)는 lvextend에 --resizefs 옵션을 주</description></item><item><title>NetworkManager</title><link>https://hnjae.github.io/wiki/networkmanager/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/networkmanager/</guid><description>특정 Wifi 에 연결하기 여러개의 AP의 SSID가 동일한 와이파이 서비스 지역에서는, 2.4GHZ에 연결되거나, 먼 거리의 AP에 연결되어 답답한 경험을 할 수 있다</description></item><item><title>NixOS</title><link>https://hnjae.github.io/wiki/nixos/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/nixos/</guid><description>각종 트러블슈팅 기록 kernel module 커널 모듈은 /run/current-system/kernel-modules/lib/modules/$(uname -r) 에 위치한다. oci-containers :latest 태그로 컨테이너를 선언하여도, nixos-rebuild에서 업데이트 된 이미지가 있는지 체크해</description></item><item><title>skim</title><link>https://hnjae.github.io/wiki/skim/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/skim/</guid><description>skim은 유명한 퍼지 파인더 fzf를 rust로 구현한 프로그램이다. 키 바인딩 https://github.com/lotabout/skim#key-bindings Shell 키바인딩 skim에서 제공하는 쉘 바인딩을 사용하면, 쉘에서 다음 커맨드</description></item><item><title>snapper</title><link>https://hnjae.github.io/wiki/snapper/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/snapper/</guid><description>snapper은 파일 시스템 스냅샷을 관리하는 툴이다. Btrfs의 snapshot 기능을 활용할 수 있다. 복구하기 실수로 rm -rf * 로 모든 파일을 지워버렸다. 복구해보자.</description></item><item><title>spotifyd</title><link>https://hnjae.github.io/wiki/spotifyd/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/spotifyd/</guid><description>https://github.com/Spotifyd/spotifyd keyring 사용법 공식 문서 spotifyd는 시스템 keyring 서비스에서 패스워드를 읽어 사용할 수 있다. spotify.conf에서 use_keyring = true 옵션을 주어야 한다. Linux 준비</description></item><item><title>systemd</title><link>https://hnjae.github.io/wiki/systemd/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/systemd/</guid><description>tldr 의존 관계보기 systemctl list-dependencies systemctl status Queued Jobs 보기 systemctl list-jobs</description></item><item><title>systemd-service</title><link>https://hnjae.github.io/wiki/systemd-service/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/systemd-service/</guid><description>systemd 유닛의 [Service] 섹션에 들어갈 항목들 Type=simple 과 Type=oneshot 의 차이 결론 기본적으로 실행시간이 짧은 프로세스는 oneshot 으로, 아니면 simple 로 하는게 옳아 보임. 만약 해당 유닛의 종속된 다른 유닛</description></item><item><title>systemd-unit</title><link>https://hnjae.github.io/wiki/systemd-unit/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/systemd-unit/</guid><description>systemd 유닛 설정 관련 [UNIT] 섹션 옵션 Wants vs Requires 결론 Wants를 Requires 대신 사용하는 것이 더 나은 선택인 경우가 많다고 한다. 꼭 필요한 경우가 아니면 Wants를 쓰자. Wants 선언한</description></item><item><title>vimium</title><link>https://hnjae.github.io/wiki/vimium/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/vimium/</guid><description>vimium은 브라우저에 vim 바인딩을 지원하는 플러그인이다. 비슷한류의 다른 플러그인들(e.g. tridactyl)와 달리 딥하지 않아, 가볍게 사용하</description></item><item><title>WINE</title><link>https://hnjae.github.io/wiki/wine/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/wine/</guid><description>WINE을 사용할 경우, Bottles 를 활용하는 것이 것이 정말 편리한 방법이다. 여러 버전의 와인과 용도별 WINEPREFIX를 쉽게 구분하여 사용할 수 있다. 그리고 $HOME</description></item><item><title>WireGuard</title><link>https://hnjae.github.io/wiki/wireguard/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/wireguard/</guid><description>tldr wg-quick 으로 설정하기 만약 와이어가드 컨피그 파일이 있다면, ip, wg 와 같은 명령어를 사용하지 않고도 간편하게 설정할 수 있다. ip와 wg 커맨드로 설정이 제대로 되었는지</description></item><item><title>XDG</title><link>https://hnjae.github.io/wiki/xdg/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://hnjae.github.io/wiki/xdg/</guid><description>XDG는 Cross-Desktop Group의 acronym 이다. # 트러블슈팅 기본 브라우저 설정 현재 기본 브라우저가 뭔지 알아보자. xdg-settings get default-web-browser 이제 org.mozilla.firefox.</description></item></channel></rss>